# buildspec.yml
version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
    commands:
      # Install any global dependencies if needed
      - npm install -g npm@latest
      
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com
      - BACKEND_REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/nestjs-app
      - FRONTEND_REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/react-app
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
      
      # Install dependencies for both applications
      - echo Installing dependencies...
      - cd backend && npm ci
      - cd ../frontend && npm ci
      - cd ..
  
  build:
    commands:
      # Build and test backend
      - echo Building the backend...
      - cd backend
      - npm run build
      - npm run test # If you have tests
      - echo Building the backend Docker image...
      - docker build -t $BACKEND_REPOSITORY_URI:latest .
      - docker tag $BACKEND_REPOSITORY_URI:latest $BACKEND_REPOSITORY_URI:$IMAGE_TAG
      
      # Build and test frontend
      - echo Building the frontend...
      - cd ../frontend
      - npm run build
      - npm run test # If you have tests
      - echo Building the frontend Docker image...
      - docker build -t $FRONTEND_REPOSITORY_URI:latest .
      - docker tag $FRONTEND_REPOSITORY_URI:latest $FRONTEND_REPOSITORY_URI:$IMAGE_TAG

  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $BACKEND_REPOSITORY_URI:latest
      - docker push $BACKEND_REPOSITORY_URI:$IMAGE_TAG
      - docker push $FRONTEND_REPOSITORY_URI:latest
      - docker push $FRONTEND_REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions files...
      - printf '{"ImageURI":"%s"}' $BACKEND_REPOSITORY_URI:$IMAGE_TAG > imageDefinitions-backend.json
      - printf '{"ImageURI":"%s"}' $FRONTEND_REPOSITORY_URI:$IMAGE_TAG > imageDefinitions-frontend.json

cache:
  paths:
    - 'backend/node_modules/**/*'
    - 'frontend/node_modules/**/*'
    - '/root/.npm/**/*'

artifacts:
  files:
    - imageDefinitions-backend.json
    - imageDefinitions-frontend.json
    - appspec.yml
    - taskdef.json